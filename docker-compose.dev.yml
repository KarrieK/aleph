version: "2"

services:
  postgres:
    image: postgres:10.0
    volumes:
      - "./build/data/postgres:/var/lib/postgresql/data"
      - "./build/logs/postgres:/var/log"
    environment:
      POSTGRES_USER: aleph
      POSTGRES_PASSWORD: aleph
      POSTGRES_DATABASE: aleph

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.0.0
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - elasticsearch-log:/var/log

  rabbitmq:
    image: rabbitmq
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  unoservice:
    image: alephdata/unoservice
    restart: on-failure
    expose:
      - 3000

  app:
    build: .
    command: /bin/bash
    links:
      - postgres
      - elasticsearch
      - rabbitmq
      - unoservice
    # tmpfs: /tmp
    volumes:
      - "./:/aleph"
      - "./mappings:/aleph/mappings"
      - "./build/archive:/data"
      - "./build/polyglot:/polyglot"
      - "/:/host"
    environment:
      ALEPH_DEBUG: 'true'
      ALEPH_SECRET_KEY: 'development'
      ALEPH_CACHE: 'false'
      ALEPH_OAUTH: 'false'
      ALEPH_EAGER: 'true'
      ALEPH_ARCHIVE_TYPE: 'file'
      ALEPH_ARCHIVE_PATH: '/data'
      POLYGLOT_DATA_PATH: /polyglot
      ALEPH_ELASTICSEARCH_URI: http://elasticsearch:9200/
      ALEPH_DATABASE_URI: postgresql://aleph:aleph@postgres/aleph
      ALEPH_BROKER_URI: amqp://guest:guest@rabbitmq:5672
      UNOSERVICE_URL: http://unoservice:3000/convert
      C_FORCE_ROOT: 'true'
    env_file:
      - aleph.env

  api:
    build: .
    command: python aleph/manage.py runserver -h 0.0.0.0 -p 5000
    expose:
      - 5000
    ports:
      - "5000:5000"
    restart: on-failure
    links:
      - postgres
      - elasticsearch
      - rabbitmq
      - unoservice
    volumes:
      - "./aleph:/aleph/aleph"
      - "./build/archive:/data"
      - "./build/polyglot:/polyglot"
      - "/:/host"
    environment:
      ALEPH_DEBUG: 'true'
      ALEPH_SECRET_KEY: 'development'
      ALEPH_CACHE: 'false'
      ALEPH_EAGER: 'true'
      ALEPH_ARCHIVE_TYPE: 'file'
      ALEPH_ARCHIVE_PATH: '/data'
      POLYGLOT_DATA_PATH: /polyglot
      ALEPH_ELASTICSEARCH_URI: http://elasticsearch:9200/
      ALEPH_DATABASE_URI: postgresql://aleph:aleph@postgres/aleph
      ALEPH_BROKER_URI: amqp://guest:guest@rabbitmq:5672
      UNOSERVICE_URL: http://unoservice:3000/convert
      C_FORCE_ROOT: 'true'
    env_file:
      - aleph.env
  
  ui:
    build: ui
    links:
      - api
    command: npm run start
    ports:
      - "8080:3000"
    volumes:
      - "./ui/src:/alephui/src"
      - "./ui/public:/alephui/public"
      - "./ui/.tx:/alephui/.tx"
      - "./ui/package.json:/alephui/package.json"
    environment:
      REACT_APP_API_ENDPOINT: '/api/2'
    env_file:
      - aleph.env

volumes:
  elasticsearch-data: {}
  elasticsearch-log: {}
  rabbitmq-data: {}