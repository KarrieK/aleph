# Aleph environment configuration
#
# This file is loaded by docker-compose and transformed into a set of
# environment variables inside the containers. These are, in turn, parsed
# by aleph and used to configure the system.

# Debug mode (insecure)
ALEPH_DEBUG=false
ALEPH_QUEUE=true

# Google API Key for Google login (use dummy values if you only want non-Google logins)
ALEPH_OAUTH=false
ALEPH_OAUTH_KEY=
ALEPH_OAUTH_SECRET=

# Read-only mode:
# ALEPH_MAINTENANCE=true

# Random string:
# ALEPH_SECRET_KEY=

# Enable HTTP caching
# ALEPH_CACHE=true

# Visible instance name in the UI
ALEPH_APP_TITLE=Aleph
# Name needs to be a slug, as it is used e.g. for the ES index, SQS queue name:
ALEPH_APP_NAME=aleph
ALEPH_FAVICON=https://investigativedashboard.org/static/favicon.ico
ALEPH_UI_URL=http://localhost:8080/
ALEPH_API_URL=http://localhost:8080/

# ALEPH_URL_SCHEME=https

ALEPH_LOGO=http://assets.pudo.org/img/logo_bigger.png

# Other customisations
ALEPH_SAMPLE_SEARCHES=Vladimir Putin:TeliaSonera

# Set email addresses, separated by colons, that will be made admin.
ALEPH_ADMINS=friedrich@pudo.org:demo@pudo.org

# Login modalities (OAuth may require a custom settings.py file)
ALEPH_PASSWORD_LOGIN=true

# Where and how to store the underlying files:
# ALEPH_ARCHIVE_TYPE=file
# ALEPH_ARCHIVE_PATH=/data

# Or, if 'ALEPH_ARCHIVE_TYPE' configuration is 's3':
# ALEPH_ARCHIVE_BUCKET=
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=

# Content options
ALEPH_OCR_DEFAULTS=eng
# ALEPH_LANGUAGES=en:de:fr:es:tr:ar ...

# Use Amazon SQS for task queueing:
# ALEPH_BROKER_URI=sqs://

# Provide a valid email to send alerts from:
ALEPH_MAIL_FROM=
ALEPH_MAIL_HOST=
ALEPH_MAIL_ADMIN=
ALEPH_MAIL_USERNAME=
ALEPH_MAIL_PASSWORD=
ALEPH_MAIL_PORT=25
ALEPH_MAIL_USE_TLS=false
